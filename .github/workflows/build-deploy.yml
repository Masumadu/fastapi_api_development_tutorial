# reminder: name of work flow file
name: Build and Deploy Code
# reminder: what triggers this workflow
on:
  push:
    branches:
#      - develop
      - main
# reminder: task to perform
jobs:
  test_and_build:
    environment:
      name: Testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}
          POSTGRES_USER: ${{secrets.DATABASE_USERNAME}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3
      - name: install python v3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: upgrade pip
        run: python3 -m pip install --upgrade pip
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest
#      - name: Login to docker hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{secrets.DOCKER_HUB_USERNAME}}
#          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}
#      - name: Setup docker build x
#        uses: docker/setup-buildx-action@v2
#      - name: build and push to docker hub
#        id: docker_build
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          files: ./Dockerfile
#          push: true
#          tags: ${{secrets.DOCKER_HUB_USERNAME}}/python_api_development_comprehensive_12:latest
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache
#      - name: Image digest
#        run: echo ${{steps.docker_build.outputs.digest}}

  deploy_to_production:
    runs-on: ubuntu-latest
    needs: [test_and_build]
    env:
      name: Production
    steps:
      - name: clone the repository
        uses: actions/checkout@v3
#      - name: add heroku remote to repository
#        run: heroku git:remote -a "fastapi-masumadu"
      - name: add heroku remote to repository
        run: |
          heroku git:remote -a "fastapi-masumadu"
          git remote -v

#        uses: akhileshns/heroku-deploy@v3.12.12
#        with:
#          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#          heroku_app_name: "fastapi-masumadu"
#          heroku_email: "michaelasumadu1@gmail.com"
#          branch: main
